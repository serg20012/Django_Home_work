from django.db import models

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ8
# üìå –°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∏ –º–æ–¥–µ–ª–∏ Django: –∫–ª–∏–µ–Ω—Ç, —Ç–æ–≤–∞—Ä –∏ –∑–∞–∫–∞–∑. –ö–ª–∏–µ–Ω—Ç
# –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤. –ó–∞–∫–∞–∑ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å
# –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤. –¢–æ–≤–∞—Ä –º–æ–∂–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ
# –∑–∞–∫–∞–∑–æ–≤.
# üìå –ü–æ–ª—è –º–æ–¥–µ–ª–∏ "–ö–ª–∏–µ–Ω—Ç":
# ‚óã –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
# ‚óã –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
#
# –ü–æ–ª—è –º–æ–¥–µ–ª–∏ "–¢–æ–≤–∞—Ä":
# ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
# ‚óã –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
# ‚óã —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
# ‚óã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
# ‚óã –¥–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
#
#  –ü–æ–ª—è –º–æ–¥–µ–ª–∏ "–ó–∞–∫–∞–∑":
# ‚óã —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—å—é "–ö–ª–∏–µ–Ω—Ç", —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞, —Å–¥–µ–ª–∞–≤—à–µ–≥–æ –∑–∞–∫–∞–∑
# ‚óã —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—å—é "–¢–æ–≤–∞—Ä", —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –≤—Ö–æ–¥—è—â–∏–µ –≤ –∑–∞–∫–∞–∑
# ‚óã –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
# ‚óã –¥–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
#
# üìå *–î–æ–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π CRUD –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å
# –º–æ–¥–µ–ª—è–º–∏ –ø–æ –∂–µ–ª–∞–Ω–∏—é. –ß—Ç–æ –ø–æ –≤–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é –∞–∫—Ç—É–∞–ª—å–Ω–æ –≤
# —Ç–∞–∫–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

from django.db import models

class Client(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    phone_number = models.CharField(max_length=15)
    address = models.TextField()
    registration_date = models.DateField(auto_now_add=True)

    def __str__(self):
        return self.name

class Product(models.Model):
    name = models.CharField(max_length=100)
    description = models.TextField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    quantity = models.PositiveIntegerField()
    added_date = models.DateField(auto_now_add=True)
    image = models.ImageField(upload_to='product_photos/', null=True, blank=True)

    def __str__(self):
        return self.name

class Order(models.Model):
    client = models.ForeignKey(Client, on_delete=models.CASCADE)
    products = models.ManyToManyField(Product)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    order_date = models.DateField(auto_now_add=True)

    def __str__(self):
        return f"Order #{self.id} - {self.client.name}"

# —Ñ—É–Ω–∫—Ü–∏–π CRUD (–¥–æ–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∑–∂–µ)!!!!
#
# # Create
# def create_client(name, email, phone_number, address):
#     return Client.objects.create(name=name, email=email, phone_number=phone_number, address=address)
#
# def create_product(name, description, price, quantity):
#     return Product.objects.create(name=name, description=description, price=price, quantity=quantity)
#
# def create_order(client, products, total_amount):
#     return Order.objects.create(client=client, products=products, total_amount=total_amount)
#
# # Read
# def get_clients():
#     return Client.objects.all()
#
# def get_products():
#     return Product.objects.all()
#
# def get_orders():
#     return Order.objects.all()
#
# # Update
# def update_client(client_id, **kwargs):
#     client = Client.objects.get(id=client_id)
#     for key, value in kwargs.items():
#         setattr(client, key, value)
#     client.save()
#
# def update_product(product_id, **kwargs):
#     product = Product.objects.get(id=product_id)
#     for key, value in kwargs.items():
#         setattr(product, key, value)
#     product.save()
#
# def update_order(order_id, **kwargs):
#     order = Order.objects.get(id=order_id)
#     for key, value in kwargs.items():
#         setattr(order, key, value)
#     order.save()
#
# # Delete
# def delete_client(client_id):
#     Client.objects.get(id=client_id).delete()
#
# def delete_product(product_id):
#     Product.objects.get(id=product_id).delete()
#
# def delete_order(order_id):
#     Order.objects.get(id=order_id).delete()
#
#
# if __name__ == '__main__':
#     new_client = create_client(
#         name='–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
#         email='ivan@example.com',
#         phone_number='123-456-7890',
#         address='–£–ª–∏—Ü–∞ –ü—É—à–∫–∏–Ω–∞, –¥–æ–º –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞')